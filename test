import com.fasterxml.jackson.databind.ObjectMapper;
import org.elasticsearch.action.get.GetResponse;
import org.elasticsearch.client.RestHighLevelClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

@Repository
public class ElasticsearchRepository {

    private static final String INDEX_NAME = "kyc_standalone";

    @Autowired
    private RestHighLevelClient restHighLevelClient;

    @Autowired
    private ObjectMapper objectMapper;

    public MyDocument fetchDocumentByDealId(String dealId) throws IOException {
        GetResponse response = restHighLevelClient.get(
                getRequest(INDEX_NAME, dealId));
        if (response.isExists()) {
            return objectMapper.convertValue(response.getSourceAsMap(), MyDocument.class);
        }
        return null;
    }

    private GetRequest getRequest(String index, String id) {
        return new GetRequest(index)
                .id(id);
    }
}









public class MyDocument {

    @JsonProperty("dealId")
    @Field(type = FieldType.Keyword)
    private String dealId;

    @JsonProperty("countryCode")
    @Field(type = FieldType.Keyword)
    private String countryCode;

    @JsonProperty("gfcid")
    @Field(type = FieldType.Keyword)
    private String gfcid;

    @JsonProperty("status")
    @Field(type = FieldType.Keyword)
    private String status;

    // Getters and Setters
    // ...

}
